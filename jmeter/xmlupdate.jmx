<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOPCOUNTER}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NUMOFTHREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="pigs" enabled="true">
          <stringProp name="dataSource">DB2</stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="query">update testxml.idxml 
   set books=&apos;${__FileToString(../resource/pigs.xml)}&apos;
       where ID=?
       </stringProp>
          <stringProp name="queryArguments">${__Random(0,${IDRANGE})}</stringProp>
          <stringProp name="queryArgumentsTypes">integer</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">XML</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="books" enabled="true">
          <stringProp name="dataSource">DB2</stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="query">update testxml.idxml 
   set books=&apos;${__FileToString(../resource/books.xml)}&apos;
       where ID=?</stringProp>
          <stringProp name="queryArguments">${__Random(0,${IDRANGE})}</stringProp>
          <stringProp name="queryArgumentsTypes">integer</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">XML</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="plants" enabled="true">
          <stringProp name="dataSource">DB2</stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="query">update testxml.idxml 
   set books=&apos;${__FileToString(../resource/plants.xml)}&apos;
       where ID=?</stringProp>
          <stringProp name="queryArguments">${__Random(0,${IDRANGE})}</stringProp>
          <stringProp name="queryArgumentsTypes">integer</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">XML</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="TestPlan.comments">plants</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="bookstore" enabled="true">
          <stringProp name="dataSource">DB2</stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="query">update testxml.idxml 
   set books=&apos;${__FileToString(../resource/bookstore.xml)}&apos;
       where ID=?</stringProp>
          <stringProp name="queryArguments">${__Random(0,${IDRANGE})}</stringProp>
          <stringProp name="queryArgumentsTypes">integer</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">XML</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="NUMOFTHREADS" elementType="Argument">
              <stringProp name="Argument.name">NUMOFTHREADS</stringProp>
              <stringProp name="Argument.value">${__P(NUMOFTHREADS,10)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Number of threads</stringProp>
            </elementProp>
            <elementProp name="LOOPCOUNTER" elementType="Argument">
              <stringProp name="Argument.name">LOOPCOUNTER</stringProp>
              <stringProp name="Argument.value">${__P(LOOPCOUNTER,1000)}</stringProp>
              <stringProp name="Argument.desc">Loop counter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="IDRANGE" elementType="Argument">
              <stringProp name="Argument.name">IDRANGE</stringProp>
              <stringProp name="Argument.value">${__P(IDRANGE,10)}</stringProp>
              <stringProp name="Argument.desc">Select ID ranger</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
      </hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <stringProp name="TestPlan.comments">DB2</stringProp>
        <stringProp name="dataSource">DB2</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery">${__CSVRead(jdbc.csv,4)}</stringProp>
        <stringProp name="dbUrl">${__CSVRead(jdbc.csv,0)}</stringProp>
        <stringProp name="driver">${__CSVRead(jdbc.csv,1)}</stringProp>
        <stringProp name="username">${__CSVRead(jdbc.csv,2)}</stringProp>
        <stringProp name="password">${__CSVRead(jdbc.csv,3)}</stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
